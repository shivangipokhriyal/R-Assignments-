}
}
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
order_data <- data[order(data[,1],na.last = NA),]
order_data
}
}
(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
order_data <- data[order(data[,1],na.last = NA),]
l <- length(order_data)
if(num=="best"){
order_data <- orderdata[,2:3]
}
else if(num == "worst"){
order_data <- order_data[l:1,2:3]
}
order_data
}
}
rankall("heart attack", "worst")
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
order_data <- data[order(data[,1],na.last = NA),]
l <- length(order_data)
if(num=="best"){
order_data <- orderdata[,2:3]
}
else if(num == "worst"){
order_data <- data[order(data[,1],na.last = NA,decreasing = TRUE),2:3]
}
order_data
}
}
rankall("heart attack", "worst")
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
order_data <- data[order(data[,1],na.last = NA),]
l <- length(order_data)
if(num=="best"){
order_data <- orderdata[,2:3]
}
else if(num == "worst"){
order_data <- data[order(data[,1],na.last = NA,decreasing = TRUE),]
}
order_data
}
}
rankall("heart attack", "worst")
?order
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
data <- data[!data[1]=="Not Available",]
order_data <- data[order(data[,1]),]
l <- length(order_data)
if(num=="best"){
order_data <- orderdata[,2:3]
}
else if(num == "worst"){
order_data <- data[order(data[,1],decreasing = TRUE),]
}
order_data
}
}
rankall("heart attack", "worst")
tail(rankall("pneumonia", "worst"), 3)
rankall("pneumonia", "worst")
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
data <- data[!data[1]=="Not Available",]
order_data <- data[order(data[,1]),]
l <- length(order_data)
if(num=="best"){
order_data <- orderdata[,2:3]
}
else if(num == "worst"){
##order_data <- data[order(data[,1],decreasing = TRUE),]
}
else {
order_data <- order_data[as.numeric(num),2:3]
}
order_data
}
}
rankall("heart attack", 20)
rankall <- function(outcome=character(), num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
data <- read.csv('outcome-of-care-measures.csv')
if(!outcome %in% c("heart attack", "pneumonia","heart failure")){
print("invalid outcome")
}
else {
keys <- c("heart attack" = 11, "heart failure" = 17, "pneumonia" = 23)
outcomeKey <- keys[outcome]
data<- data[,c(outcomeKey, 2, 7)]
data <- data[!data[1]=="Not Available",]
order_data <- data[order(data[,1]),]
l <- length(order_data)
if(num=="best"){
order_data <- orderdata[,2:3]
}
else if(num == "worst"){
##order_data <- data[order(data[,1],decreasing = TRUE),]
}
else if(!num %in% 1:l){
print("NA")
}
else {
order_data <- order_data[as.numeric(num):l , 2:3]
}
order_data
}
}
rankall("heart attack", 20)
t<-rankall("heart attack", 20)
head(t,10)
rankall <- function(outcome, num = "best") {
data <- read.csv(file="outcome-of-care-measures.csv", colClasses = 'character')
if(outcome == 'heart attack') {
i <- 11
}
else if(outcome == 'heart failure') {
i <- 17
}
else if(outcome == 'pneumonia') {
i <- 23
}
else {
stop('invalid outcome')
}
unique.states <- sort(unique(data$State))
# print(unique.states)
result.df <- list()
for(state in unique.states) {
data.state <- data[data$State == state, ]
data.state[, i] <- as.numeric(x=data.state[, i])
data.state <- data.state[complete.cases(data.state), ]
# print(num)
if(num == "best") {
numrank = 1
}
else if(num == "worst") {
numrank = nrow(data.state)
# if(state == 'WI') {
#   print(num)
#   print('WI num')
# }
}
else if(is.numeric(x=num)) {
# print(num)
if(num < 1 || num > nrow(data.state)) {
result.df <- rbind(result.df, list(NA, state))
print(state)
next
}
else numrank <- num
# print(num)
}
else {
stop('invalid num')
}
# print(num)
data.state <- data.state[order(data.state[,i], data.state$Hospital.Name), ]
# if(state == 'WI') {
#  print(data.state[, c(2,i)])
#  print(numrank)
#  print(nrow(data.state))
# }
return.names <- data.state[numrank, ]$Hospital.Name
# print(return.names[1])
result.df <- rbind(result.df, list(return.names[1], state))
# print(result.df)
}
result.df <- as.data.frame(x=result.df)
colnames(x=result.df) <- c('hospital', 'state')
result.df
}
rankall("heart attack", 20)
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
data <- read.csv(file="outcome-of-care-measures.csv", colClasses = 'character')
if(outcome == 'heart attack') {
i <- 11
}
else if(outcome == 'heart failure') {
i <- 17
}
else if(outcome == 'pneumonia') {
i <- 23
}
else {
stop('invalid outcome')
}
unique.states <- sort(unique(data$State))
# print(unique.states)
result.df <- list()
for(state in unique.states) {
data.state <- data[data$State == state, ]
data.state[, i] <- as.numeric(x=data.state[, i])
data.state <- data.state[complete.cases(data.state), ]
# print(num)
if(num == "best") {
numrank = 1
}
else if(num == "worst") {
numrank = nrow(data.state)
# if(state == 'WI') {
#   print(num)
#   print('WI num')
# }
}
else if(is.numeric(x=num)) {
# print(num)
if(num < 1 || num > nrow(data.state)) {
result.df <- rbind(result.df, list(NA, state))
#print(state)
next
}
else numrank <- num
# print(num)
}
else {
stop('invalid num')
}
# print(num)
data.state <- data.state[order(data.state[,i], data.state$Hospital.Name), ]
# if(state == 'WI') {
#  print(data.state[, c(2,i)])
#  print(numrank)
#  print(nrow(data.state))
# }
return.names <- data.state[numrank, ]$Hospital.Name
# print(return.names[1])
result.df <- rbind(result.df, list(return.names[1], state))
# print(result.df)
}
result.df <- as.data.frame(x=result.df)
colnames(x=result.df) <- c('hospital', 'state')
result.df
}
head(rankall("heart attack", 20), 10)
warning()
warnings()
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
rankhospital("NY", "heart attack", 7)
rankhospital <- function(state, outcome, num="best" ) {
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
data <- read.csv('outcome-of-care-measures.csv')
test<- c("best","worst",1:4706)
if(!outcome %in% c("heart attack","heart failure","pneumonia")){
sprintf("error in best(%s,%s): invalid outcome", state,outcome)
}
else if(!state %in% data[,'State']){
sprintf("error in best(%s,%s): invalid state", state,outcome)
}
else if(!num %in% as.character(test)) {
print("NA")
}
else {
if(outcome == 'heart attack'){
df <- data[,c(2,7,11)]
}
else if(outcome == 'heart failure'){
df <- data[,c(2,7,17)]
}
else {
df <- data[,c(2,7,23)]
}
df <- df[df['State']==state,]
df <- df[!df[3]=='Not Available',]
df[,3] <- as.numeric(df[,3])
arr_list <- df[order(df[,3]),3]
if(num=="best"){
arr <- arr_list[1]
}
else if(num=="worst"){
arr <- arr_list[length(arr_list)]
}
else {
arr <- arr_list[as.numeric(num)]
}
hospital_name <- df[df[,3]==arr,]
return(hospital_name[1,1])
}
}
rankhospital("NY", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital <- function(state, outcome, num="best" ) {
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
data <- read.csv('outcome-of-care-measures.csv')
test<- c("best","worst",1:4706)
if(!outcome %in% c("heart attack","heart failure","pneumonia")){
sprintf("error in best(%s,%s): invalid outcome", state,outcome)
}
else if(!state %in% data[,'State']){
sprintf("error in best(%s,%s): invalid state", state,outcome)
}
else if(!num %in% as.character(test)) {
print("NA")
}
else {
if(outcome == 'heart attack'){
df <- data[,c(2,7,11)]
}
else if(outcome == 'heart failure'){
df <- data[,c(2,7,17)]
}
else {
df <- data[,c(2,7,23)]
}
df <- df[df['State']==state,]
df <- df[!df[3]=='Not Available',]
df[,3] <- as.numeric(df[,3])
arr_list <- df[order(df[,3]),3]
if(num=="best"){
arr <- arr_list[1]
}
else if(num=="worst"){
arr <- arr_list[length(arr_list)]
}
else {
arr <- arr_list[as.numeric(num)]
}
hospital_name <- df[df[,3]==arr,]
return(hospital_name[,1])
}
}
rankhospital("NY", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("WA", "heart attack", 7)
rankhospital("NC", "heart attack", "worst")
best("AK", "pneumonia")
best("NY", "pneumonia")
best("SC", "heart attack")
rankhospital <- function(state, outcome, num="best" ) {
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
data <- read.csv('outcome-of-care-measures.csv')
test<- c("best","worst",1:4706)
if(!outcome %in% c("heart attack","heart failure","pneumonia")){
sprintf("error in best(%s,%s): invalid outcome", state,outcome)
}
else if(!state %in% data[,'State']){
sprintf("error in best(%s,%s): invalid state", state,outcome)
}
else if(!num %in% as.character(test)) {
print("NA")
}
else {
if(outcome == 'heart attack'){
df <- data[,c(2,7,11)]
}
else if(outcome == 'heart failure'){
df <- data[,c(2,7,17)]
}
else {
df <- data[,c(2,7,23)]
}
df <- df[df['State']==state,]
df <- df[!df[3]=='Not Available',]
df[,3] <- as.numeric(df[,3])
arr_list <- df[order(df[,3]),3]
if(num=="best"){
arr <- arr_list[1]
}
else if(num=="worst"){
arr <- arr_list[length(arr_list)]
}
else {
arr <- arr_list[as.numeric(num)]
}
hospital_name <- df[df[,3]==arr,]
return(hospital_name[order(hospital_name[,1]),1])
}
}
rankhospital("TX", "pneumonia", 10)
rankhospital <- function(state, outcome, num="best" ) {
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
data <- read.csv('outcome-of-care-measures.csv')
test<- c("best","worst",1:4706)
if(!outcome %in% c("heart attack","heart failure","pneumonia")){
sprintf("error in best(%s,%s): invalid outcome", state,outcome)
}
else if(!state %in% data[,'State']){
sprintf("error in best(%s,%s): invalid state", state,outcome)
}
else if(!num %in% as.character(test)) {
print("NA")
}
else {
if(outcome == 'heart attack'){
df <- data[,c(2,7,11)]
}
else if(outcome == 'heart failure'){
df <- data[,c(2,7,17)]
}
else {
df <- data[,c(2,7,23)]
}
df <- df[df['State']==state,]
df <- df[!df[3]=='Not Available',]
df[,3] <- as.numeric(df[,3])
arr_list <- df[order(df[,3]),3]
if(num=="best"){
arr <- arr_list[1]
}
else if(num=="worst"){
arr <- arr_list[length(arr_list)]
}
else {
arr <- arr_list[as.numeric(num)]
}
hospital_name <- df[df[,3]==arr,]
hospital_name <- hospital_name[order(hospital_name[,1]),1]
return(hospital_name[1,1])
}
}
